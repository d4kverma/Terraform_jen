pipeline {
    agent {
        kubernetes {
            yaml '''
              apiVersion: v1
              kind: Pod
              spec:
                volumes:
                - name: hostpath-privileged
                  hostPath:
                    path: /var/run/docker.sock
                containers:
                - name: helm 
                  image: alpine/helm:3.1.1
                  command:
                  - cat
                  tty: true
                - name: jdk
                  image: sonarsource/sonar-scanner-cli
                  command:
                  - cat
                  tty: true
                  volumeMounts:
                  - mountPath: /var/run/docker.sock
                    name: hostpath-privileged
                - name: npm
                  image: node:12.16.2-alpine
                  command:
                  - cat
                  tty: true  
                  volumeMounts:
                  - mountPath: /var/run/docker.sock
                    name: hostpath-privileged
                - name: helm-aws
                  image: jshimko/kube-tools-aws:3.8.1
                  command:
                  - cat
                  tty: true
                  volumeMounts:
                  - mountPath: /var/run/docker.sock
                    name: hostpath-privileged
                - name: docker-aws
                  image: rubixcubin/dockerawscliv2
                  command:
                  - cat
                  tty: true
                  volumeMounts:
                  - mountPath: /var/run/docker.sock
                    name: hostpath-privileged
                - name: terraform-aws
                  image: hashicorp/terraform:1.0.8
                  command:
                  - cat
                  tty: true
                  volumeMounts:
                  - mountPath: /var/run/docker.sock
                    name: hostpath-privileged

                    
            '''
        }
    }

      stages {
          stage('Git Clone') {              
            steps {  
               checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/vaibhav7797/Terraform_jen']]])
            }
        }
        

       stage ("terraform init") {
            steps {
               echo 'Terraform init...'
              withCredentials([string(credentialsId: 'moneyceo_prod_access_key', variable: 'jenkins_access_key'),string(credentialsId: 'moneyceo_prod_secret_key', variable: 'jenkins_secret_key')]) {
                container("terraform-aws") {
                  script {
                    sh 'terraform init'
            }
        }
              
      }
    }
  }
        stage ("terraform plan") {
            steps {
               echo 'Terraform plan...'
              withCredentials([string(credentialsId: 'moneyceo_prod_access_key', variable: 'jenkins_access_key'),string(credentialsId: 'moneyceo_prod_secret_key', variable: 'jenkins_secret_key')]) {
                container("terraform-aws") {
                  script {
                    sh 'terraform plan'
            }
        }
              
      }
    }
  }
  
      }
}

       